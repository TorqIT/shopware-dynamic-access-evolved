(window["webpackJsonpPlugintorq-dynamic-access-evolved"]=window["webpackJsonpPlugintorq-dynamic-access-evolved"]||[]).push([[162],{707:function(){},162:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}}),n(323);let{Mixin:a}=Shopware,{Criteria:i}=Shopware.Data;var s={template:'{% block torq_dynamic_access_evolved_list %}\n<sw-page class="sw-promotion-v2-list">\n\n    {% block torq_dynamic_access_evolved_search_bar %}\n    <template #search-bar>\n        <sw-search-bar\n            initial-search-type="torq_dynamic_access_evolved"\n            :placeholder="$tc(\'torq-dynamic-access-evolved.list.placeholderSearchBar\')"\n            :initial-search="term"\n            @search="onSearch"\n        />\n    </template>\n    {% endblock %}\n\n    {% block torq_dynamic_access_evolved_list_smart_bar_header %}\n    <template #smart-bar-header>\n\n        {% block torq_dynamic_access_evolved_list_smart_bar_header_title %}\n        <h2>\n\n            {% block torq_dynamic_access_evolved_list_smart_bar_header_title_text %}\n            {{ $tc(\'torq-dynamic-access-evolved.list.textTitle\') }}\n            {% endblock %}\n\n            {% block torq_dynamic_access_evolved_list_smart_bar_header_amount %}\n            <span\n                v-if="!isLoading"\n                class="sw-page__smart-bar-amount"\n            >\n                ({{ total }})\n            </span>\n            {% endblock %}\n\n        </h2>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n    {% block torq_dynamic_access_evolved_list_smart_bar_actions %}\n    <template #smart-bar-actions>\n\n        {% block torq_dynamic_access_evolved_list_smart_bar_actions_add %}\n        <sw-button\n            v-tooltip="addButtonTooltip"\n            class="torq-dynamic-access-evolved-list__smart-bar-button-add"\n            variant="primary"\n            :router-link="{ name: \'torq.dynamic.access.evolved.create\' }"\n           {# :disabled="!acl.can(\'promotion.creator\') || undefined" #}\n        >\n            {{ $tc(\'torq-dynamic-access-evolved.list.buttonAddDynamicAccessEvolved\') }}\n        </sw-button>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n    {% block torq_dynamic_access_evolved_list_language_switch %}\n    <template #language-switch>\n        <sw-language-switch @on-change="onChangeLanguage" />\n    </template>\n    {% endblock %}\n\n    {% block torq_dynamic_access_evolved_list_content %}\n    <template #content>\n        <div class="torq-dynamic-access-evolved-list__content">\n\n            {% block torq_dynamic_access_evolved_list_grid %}\n            <sw-entity-listing\n                v-if="entitySearchable"\n                :repository="dynamicAccessEvolvedRepository"\n                :columns="dynamicAccessEvolvedColumns"\n                :items="dynamicAccessEvolved"\n                detail-route="torq.dynamic.access.evolved.detail"\n                :is-loading="isLoading"\n                {# :allow-inline-edit="acl.can(\'promotion.editor\') || undefined" #}\n                {# :show-selection="acl.can(\'promotion.deleter\') || undefined" #}\n                {# :allow-edit="acl.can(\'promotion.editor\') || undefined" #}\n                {# :allow-view="acl.can(\'promotion.viewer\') || undefined" #}\n                allow-column-edit\n                full-page\n                @update-records="updateTotal"\n            >\n\n                {% block torq_dynamic_access_evolved_list_grid_columns %}\n                {% block torq_dynamic_access_evolved_list_grid_columns_active %}\n                <template #column-active="{ item }">\n                    <sw-icon\n                        v-if="item.active"\n                        class="torq-dynamic-access-evolved-list__icon-activity is--active"\n                        name="regular-checkmark-xs"\n                    />\n                    <sw-icon\n                        v-else\n                        class="torq-dynamic-access-evolved-list__icon-activity is--inactive"\n                        name="regular-times-s"\n                    />\n                </template>\n                {% endblock %}\n\n                {% block torq_dynamic_access_evolved_list_grid_columns_valid_from %}\n                <template #column-validFrom="{ item }">\n                    {{ dateFilter(item.validFrom, { hour: \'2-digit\', minute: \'2-digit\' }) }}\n                </template>\n                {% endblock %}\n\n                {% block torq_dynamic_access_evolved_list_grid_columns_valid_until %}\n                <template #column-validUntil="{ item }">\n                    {{ dateFilter(item.validUntil, { hour: \'2-digit\', minute: \'2-digit\' }) }}\n                </template>\n                {% endblock %}\n                {% endblock %}\n\n                {% block torq_dynamic_access_evolved_list_grid_columns_actions %}\n                {% block torq_dynamic_access_evolved_list_grid_columns_actions_delete %}\n                <template #delete-action="{ item, showDelete }">\n                    <sw-context-menu-item\n                        variant="danger"\n                        :disabled="(item && item.orderCount > 0) || undefined"\n                        @click="showDelete(item.id)"\n                    >\n                        {{ $tc(\'global.default.delete\') }}\n                    </sw-context-menu-item>\n                </template>\n                {% endblock %}\n                {% endblock %}\n\n            </sw-entity-listing>\n            {% endblock %}\n\n            {% block torq_dynamic_access_evolved_list_empty_state %}\n            <template v-if="!isLoading && !total">\n                <torq-dynamic-access-evolved-empty-state-hero\n                    v-if="isValidTerm(term)"\n                    :title="$tc(\'sw-empty-state.messageNoResultTitle\')"\n                    :description="$tc(\'sw-empty-state.messageNoResultSubline\')"\n                />\n                <torq-dynamic-access-evolved-empty-state-hero\n                    v-else\n                    :title="$tc(\'torq-dynamic-access-evolved.list.titleEmpty\')"\n                    :description="$tc(\'torq-dynamic-access-evolved.list.descriptionEmpty\')"\n                >\n\n                    {% block torq_dynamic_access_evolved_list_empty_state_actions %}\n                    <template #actions>\n                        <sw-button\n                            v-tooltip="addButtonTooltip"\n                            class="torq-dynamic-access-evolved-list__empty-state-button-add"\n                            variant="primary"\n                            :router-link="{ name: \'torq.dynamic.access.evolved.create\' }"\n                            {# :disabled="!acl.can(\'promotion.creator\') || undefined" #}\n                        >\n                            {{ $tc(\'torq-dynamic-access-evolved.list.buttonAddDynamicAccessEvolved\') }}\n                        </sw-button>\n                    </template>\n                    {% endblock %}\n\n                </torq-dynamic-access-evolved-empty-state-hero>\n            </template>\n            {% endblock %}\n\n        </div>\n    </template>\n    {% endblock %}\n\n    {% block torq_dynamic_access_evolved_list_sidebar %}\n    <template #sidebar>\n        <sw-sidebar>\n\n            {% block torq_dynamic_access_evolved_list_sidebar_refresh %}\n            <sw-sidebar-item\n                icon="regular-undo"\n                :title="$tc(\'torq-dynamic-access-evolved.list.list.titleSidebarItemRefresh\')"\n                @click="onRefresh"\n            />\n            {% endblock %}\n\n        </sw-sidebar>\n    </template>\n    {% endblock %}\n    \n\n</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl"],mixins:[a.getByName("listing")],data(){return{isLoading:!0,dynamicAccessEvolved:null,total:0,showDeleteModal:!1,sortBy:"createdAt",sortDirection:"DESC",searchConfigEntity:"torq_dynamic_access_evolved"}},metaInfo(){return{title:this.$tc("torq-dynamic-access-evolved.list.textTitle")}},computed:{dynamicAccessEvolvedRepository(){return this.repositoryFactory.create("torq_dynamic_access_evolved")},dynamicAccessEvolvedCriteria(){return new i(this.page,this.limit).setTerm(this.term).addSorting(i.sort(this.sortBy,this.sortDirection))},dynamicAccessEvolvedColumns(){return this.getDynamicAccessEvolvedColumns()},addButtonTooltip(){return{message:this.$tc("sw-privileges.tooltip.warning"),showOnDisabledElements:!0,position:"bottom"}},dateFilter(){return Shopware.Filter.getByName("date")}},methods:{async getList(){this.isLoading=!0;let e=await this.addQueryScores(this.term,this.dynamicAccessEvolvedCriteria);return this.entitySearchable?this.dynamicAccessEvolvedRepository.search(e).then(e=>(this.isLoading=!1,this.total=e.total,this.dynamicAccessEvolved=e,this.dynamicAccessEvolved)):(this.isLoading=!1,this.total=0,!1)},onChangeLanguage(){this.getList()},getDynamicAccessEvolvedColumns(){return[{property:"name",label:"torq-dynamic-access-evolved.list.columnName",routerLink:"torq.dynamic.access.evolved.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"active",label:"torq-dynamic-access-evolved.list.columnActive",inlineEdit:"boolean",allowResize:!0,align:"center"},{property:"validFrom",label:"torq-dynamic-access-evolved.list.columnValidFrom",inlineEdit:"date",allowResize:!0,align:"center"},{property:"validUntil",label:"torq-dynamic-access-evolved.list.columnValidUntil",inlineEdit:"date",allowResize:!0,align:"center"}]},updateTotal({total:e}){this.total=e}}}},323:function(e,t,n){var a=n(707);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.id,a,""]]),a.locals&&(e.exports=a.locals),n(346).Z("777bc5aa",a,!0,{})},346:function(e,t,n){"use strict";function a(e,t){for(var n=[],a={},i=0;i<t.length;i++){var s=t[i],o=s[0],c={id:e+":"+i,css:s[1],media:s[2],sourceMap:s[3]};a[o]?a[o].parts.push(c):n.push(a[o]={id:o,parts:[c]})}return n}n.d(t,{Z:function(){return u}});var i="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!i)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var s={},o=i&&(document.head||document.getElementsByTagName("head")[0]),c=null,l=0,r=!1,d=function(){},m=null,v="data-vue-ssr-id",_="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function u(e,t,n,i){r=n,m=i||{};var o=a(e,t);return p(o),function(t){for(var n=[],i=0;i<o.length;i++){var c=s[o[i].id];c.refs--,n.push(c)}t?p(o=a(e,t)):o=[];for(var i=0;i<n.length;i++){var c=n[i];if(0===c.refs){for(var l=0;l<c.parts.length;l++)c.parts[l]();delete s[c.id]}}}}function p(e){for(var t=0;t<e.length;t++){var n=e[t],a=s[n.id];if(a){a.refs++;for(var i=0;i<a.parts.length;i++)a.parts[i](n.parts[i]);for(;i<n.parts.length;i++)a.parts.push(h(n.parts[i]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{for(var o=[],i=0;i<n.parts.length;i++)o.push(h(n.parts[i]));s[n.id]={id:n.id,refs:1,parts:o}}}}function y(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function h(e){var t,n,a=document.querySelector("style["+v+'~="'+e.id+'"]');if(a){if(r)return d;a.parentNode.removeChild(a)}if(_){var i=l++;t=g.bind(null,a=c||(c=y()),i,!1),n=g.bind(null,a,i,!0)}else t=f.bind(null,a=y()),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){a?(a.css!==e.css||a.media!==e.media||a.sourceMap!==e.sourceMap)&&t(e=a):n()}}var b=function(){var e=[];return function(t,n){return e[t]=n,e.filter(Boolean).join("\n")}}();function g(e,t,n,a){var i=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=b(t,i);else{var s=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(s,o[t]):e.appendChild(s)}}function f(e,t){var n=t.css,a=t.media,i=t.sourceMap;if(a&&e.setAttribute("media",a),m.ssrId&&e.setAttribute(v,t.id),i&&(n+="\n/*# sourceURL="+i.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}}]);